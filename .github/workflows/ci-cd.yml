name: Babbly API Gateway CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_NAME: 'babbly-api-gateway'
  DOCKER_IMAGE: 'yourdockerhub/babbly-api-gateway'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100  # Required for SonarCloud

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release --collect:"XPlat Code Coverage"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: |
            **/bin/Release/net9.0/
            !**/bin/Release/net9.0/ref/

  sonarcloud-analysis:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/bin/**,**/obj/**,**/*.test.js,**/*.spec.js
            -Dsonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
            -Dsonar.cs.analyzer.projectOutPaths=.

  docker-build:
    name: Docker Build and Publish
    runs-on: ubuntu-latest
    needs: [build-and-test, sonarcloud-analysis]
    if: |
      always() &&
      (needs.build-and-test.result == 'success' || needs.build-and-test.result == 'skipped') &&
      (needs.sonarcloud-analysis.result == 'success' || needs.sonarcloud-analysis.result == 'skipped') &&
      github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create .env file
        run: |
          echo "ASPNETCORE_ENVIRONMENT=Development" > .env
          echo "ConnectionStrings__DefaultConnection=Host=db;Database=babbly-posts;Username=babbly_user;Password=babbly_password;" >> .env

      - name: Build and push Backend
        run: |
          # Always build the image
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/babbly-api-gateway:${{ github.sha }} .

          # Only push to DockerHub on main branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/babbly-api-gateway:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/babbly-api-gateway:latest
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/babbly-api-gateway:${{ github.sha }}
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/babbly-api-gateway:latest
          fi 